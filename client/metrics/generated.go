package metrics

// This file is generated by client/metrics/codegen/gen.go.
import (
	"time"

	pb "github.com/sgielen/rufs/proto"
)

func SetClientStartTimeSeconds(circle string, v time.Time) {
	setGauge(circle, pb.PushMetricsRequest_CLIENT_START_TIME_SECONDS, []string{}, float64(v.UnixNano()) / 1000.0)
}

func SetActiveVfsReads(circle string, v int64) {
	setGauge(circle, pb.PushMetricsRequest_ACTIVE_VFS_READS, []string{}, float64(v))
}

func AddVfsReads(circle string, v int64) {
	increaseCounter(circle, pb.PushMetricsRequest_VFS_READS, []string{}, float64(v))
}

func AppendVfsReadLatency(circle string, cached string, v int64) {
	appendDistribution(circle, pb.PushMetricsRequest_VFS_READ_LATENCY, []string{cached}, float64(v))
}

func isCounter(t pb.PushMetricsRequest_MetricId) bool {
	switch t {
	case pb.PushMetricsRequest_VFS_READS:
		return true
	default:
		return false
	}
}

func isDistributionMetric(t pb.PushMetricsRequest_MetricId) bool {
	switch t {
	case pb.PushMetricsRequest_VFS_READ_LATENCY:
		return true
	default:
		return false
	}
}
